# Usage: make [all/clean/oclean/fclean] -f [file]

CC = gcc
SRC = main.c holberton.c
OBJ = $(SRC:.c=.o)
NAME = holberton
CFLAGS = -Wall -Werror -Wextra -pedantic

# standard rule to say rules below are not filenames
.PHONY: all clean oclean fclean re

# makes executable
all: m.h $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# deletes tmp files & exes
clean:
	$(RM) *~ $(NAME)

# deletes object files
oclean:
	$(RM) $(OBJ)

# deletes all tmp files, exes & obj files
fclean: clean oclean

# deletes all, then recompiles all source files
re: oclean all


#Requirements:
#CFLAGS: your favorite compiler flags: -Wall -Werror -Wextra -pedantic
#The all rule should recompile only the updated source files
#The clean, oclean, fclean, re rules should never fail
#You are not allowed to have a list of all the .o files
#You have to use $(RM) for the cleaning up rules, but you are not allowed to set the RM variable
#You are not allowed to use the string $(CC) more than once in your Makefile
#You are only allowed to use the string $(RM) twice in your Makefile
#You are not allowed to use the string $(CFLAGS) (but the compiler should still use the flags you set in this variable)
#You are not allowed to have an $(OBJ) rule
#You are not allowed to use the %.o: %.c rule
#Your Makefile should work even if there is a file in the folder that has the same name as one of your rule
#Your Makefile should not compile if the header file m.h is missing
